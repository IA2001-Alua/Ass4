#include <iostream>
#include <map>
#include <string>
#include <set>
#include <iomanip>
#include <vector>
using namespace std;
class Course{
    public:
    string Name;
    int nStudEnrol;
    string Lecturer;
};

class ACM{
    string Topic;
    map<string, int> LocatioN ;
    int PresNum;
};
class IEEE{
    string ConfName;
    string location;
    set <string> TopicPres;
};
template <typename T1> class Student; //early declaration
template <typename T1> ostream& operator<<(std::ostream& out, const Student<T1>& st);
template <typename T1> istream& operator>>(std::istream& in,  Student<T1>& st);

template <typename T1>
class Student{
public:
    string Name;
    long int ID;
    int age;
    string  StudCourse [4];
    T1 activity;

   // Student(string Name, long int ID, int age, Course StudCourse, T1 activity){} //constractor

    friend  ostream & operator << <T1>(ostream &out, const Student<T1> &stad);
    friend  istream & operator >> <T1>(istream &in,  Student <T1>&stad);

};
template<typename T1>
ostream &operator <<(ostream &out, const Student <T1> &stad){
    out<< "Name" << setw(10) << "ID"<< setw(10)<< "Age"<< setw(12)<< "Courses"<< setw(17)<<"Activities"<<endl;
    out << "---------------------------------------------------------------"<< endl;
    out << stad.Name<< setw(10)<< stad.ID <<setw(10)<< stad.age<< setw(12)<< stad.StudCourse[0] << setw(17)<< stad.activity<<endl;
    for(int i = 1; i < 4; i++) {
        out << setw(35) <<  stad.StudCourse[i] << "\n";
    }

;
}
template<typename T1>
istream &operator >>(istream &in,  Student <T1> &stad){
    cout << "Enter Student info ";
    in >> stad.Name;
    in>> stad.ID;
    in>>stad.age;
    for (int i=0; i<4; i++){
        in>> stad.StudCourse[i];
    }

    in >> stad.activity;

}

int main() {
    Student <string> student_obj;
    cin >> student_obj;
    cout << student_obj;
    return 0;
}
